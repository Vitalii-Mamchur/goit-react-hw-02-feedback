{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["Section","title","children","prototype","PropTypes","string","isRequired","FeedbackOptions","options","onLeaveFeedback","map","option","className","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","number","Notification","message","App","state","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","objKey","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAGMA,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MAKPF,EAAQG,UAAY,CAClBF,MAAOG,IAAUC,OAAOC,WACxBJ,SAAUE,IAAUC,OAAOC,YAGdN,QCdTO,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAEEC,UAAU,SACVC,KAAMF,EACNG,KAAK,SACLC,QAASN,EALX,SAOGE,GANIA,SAafJ,EAAgBJ,UAAY,CAC1BK,QAASJ,IAAUC,OAAOC,WAC1BG,gBAAiBL,IAAUC,OAAOC,YAGrBC,QCvBTS,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WAIJL,EAAWb,UAAY,CACrBc,KAAMb,IAAUkB,OAAOhB,WACvBY,QAASd,IAAUkB,OAAOhB,WAC1Ba,IAAKf,IAAUkB,OAAOhB,WACtBc,MAAOhB,IAAUkB,OAAOhB,WACxBe,mBAAoBjB,IAAUkB,OAAOhB,YAGxBU,QClBTO,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KAE1CD,EAAapB,UAAY,CACvBqB,QAASpB,IAAUC,OAAOC,YAGbiB,QCwDAE,E,4MA1DbC,MAAQ,CAAET,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCV,gBAAkB,SAAAkB,GAChB,IAAMd,EAAOc,EAAMC,OAAOf,KAC1B,EAAKgB,UAAS,SAAAC,GAAS,sBACpBjB,EAAOiB,EAAUjB,GAAQ,O,EAI9BkB,mBAAqB,WAAO,IAAD,EACM,EAAKL,MAGpC,OAJyB,EACjBT,KADiB,EACXC,QADW,EACFC,K,EAMzBa,gCAAkC,WAChC,IAAMZ,EAAQ,EAAKW,qBACXd,EAAS,EAAKS,MAAdT,KACJI,EAAqB,EAIzB,OAHID,GAASH,IACXI,EAAqBY,KAAKC,MAAc,IAAPjB,EAAcG,IAE1CC,G,4CAGT,WAAU,IAAD,EACwBc,KAAKT,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQe,KAAKJ,qBACbV,EAAqBc,KAAKH,kCAC1BI,EAASC,OAAOC,KAAKH,KAAKT,OAEhC,OACE,qCACE,cAAC,EAAD,CAASzB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAAS4B,EACT3B,gBAAiB0B,KAAK1B,oBAG1B,cAAC,EAAD,CAASR,MAAM,aAAf,SACa,IAAVmB,EACC,cAAC,EAAD,CAAcI,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDhBkB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c78fd778.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          className=\"button\"\r\n          name={option}\r\n          type=\"button\"\r\n          onClick={onLeaveFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.prototype = {\r\n  options: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage}%</p>\r\n  </>\r\n);\r\n\r\nStatistics.prototype = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.prototype = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = event => {\n    const name = event.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    let total = 0;\n    total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    let positivePercentage = 0;\n    if (total && good) {\n      positivePercentage = Math.round((good * 100) / total);\n    }\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}